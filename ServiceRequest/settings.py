"""
Django settings for ServiceRequest project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

APIURL = env('APIURL')
ORACLECRED = env('ORACLECRED')
LDAP = env('LDAP')



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g-q+sqghziy&3g)1cngcwed*9b1ak3(ilepvzl3iwpky726%te'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'employeeInfo',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ServiceRequest.urls'
TEMPLATE_DIR = os.path.join(BASE_DIR,"templates")
LOG_ROOT = os.path.join(BASE_DIR,"logs")
AUTH_USER_MODEL = 'employeeInfo.User'
LOGIN_URL = "login/"
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL ='login/'
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# SESSION_COOKIE_AGE = 10 * 60



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'email_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOG_ROOT, 'email_logs.log'),
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOG_ROOT, 'access_logs.log'),
        },
    },
    'loggers': {
        'email_logger': {
            'handlers': ['email_handler'],
            'level': 'DEBUG',
            'propagate': True,
        }

    },
    'loggers': {
        'ops_logger': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        }

    },
}


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'employeeInfo.context_processors.analyst_user',
            ],
        },
    },
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = '10.10.100.24'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'najmus@mblbd.com'
EMAIL_HOST_PASSWORD = 'mblitd@0000'

EMAIL_USE_TLS = False
EMAIL_USE_SSL = False  # Usually not used if no authentication


import ssl
EMAIL_SSL_KEYFILE = None
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_TRUST = '*'

# Custom SSL context
EMAIL_SSL_CONTEXT = ssl.create_default_context()







WSGI_APPLICATION = 'ServiceRequest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'service_request_automation',
#         'USER': 'postgres',
#         'PASSWORD': '1234',
#         'HOST': 'localhost',  # Replace with your PostgreSQL server's address if necessary
#         'PORT': '5432',          # Leave empty to use the default PostgreSQL port (usually 5432)
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "mssql",
        "NAME": "db_service_request_automation",
        "USER": "borson_new",
        "PASSWORD": "1234",
        "HOST": "HO-IT-110\SQLEXPRESS",
        "PORT": "",
        "OPTIONS": {"driver": "ODBC Driver 17 for SQL Server", 
        },
    },
}


# DATABASES = {
#     "default": {
#         "ENGINE": env('DB_ENGINE'),
#         "NAME": env('DB_NAME'),
#         "USER": env('DB_USER'),
#         "PASSWORD": env('DB_PW'),
#         "HOST": env('DB_HOST'),
#         "PORT": env('DB_PORT'),
#         },
# }


AUTHENTICATION_BACKENDS = [
    # 'django.contrib.auth.backends.ModelBackend',
'employeeInfo.backends.UserBackend',]

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [ str(BASE_DIR) + '/static/',]

# Base url to serve media files  
MEDIA_URL = '/media/'  
  
# Path where media is stored  
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') 

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
