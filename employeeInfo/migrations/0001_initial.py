# Generated by Django 3.2.13 on 2024-03-15 10:47

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApproverList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=50)),
                ('role', models.CharField(max_length=50)),
                ('approver_level', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='network_analysts_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_analyst_employee_id', models.CharField(max_length=100, null=True)),
                ('network_analyst_name', models.CharField(max_length=100, null=True)),
                ('network_analyst_email', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='operations_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_request_employee_id', models.CharField(max_length=100)),
                ('service_request_id', models.CharField(max_length=100)),
                ('service_request_time', models.DateTimeField(max_length=100)),
                ('approved_hod', models.CharField(default='0', max_length=100)),
                ('approved_hod_at', models.DateTimeField(max_length=100, null=True)),
                ('approved_ciso', models.CharField(default='0', max_length=100)),
                ('approved_ciso_at', models.DateTimeField(max_length=100, null=True)),
                ('approved_cto', models.CharField(default='0', max_length=100)),
                ('approved_cto_at', models.DateTimeField(max_length=100, null=True)),
                ('executed', models.CharField(default='0', max_length=100)),
                ('executed_at', models.DateTimeField(max_length=100, null=True)),
                ('current_status', models.CharField(default='0', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Service_request',
            fields=[
                ('form_no', models.CharField(blank=True, max_length=100)),
                ('service_request_id', models.CharField(max_length=100, null=True)),
                ('service_title', models.CharField(max_length=200, null=True)),
                ('request_no', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('date', models.DateField(max_length=100)),
                ('employee_name', models.CharField(max_length=100)),
                ('branch_code', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('mobile_no', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('employee_id', models.CharField(max_length=100)),
                ('branch_division_name', models.CharField(max_length=100)),
                ('pa_no', models.CharField(max_length=100)),
                ('ip_address', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('request_for', models.CharField(blank=True, choices=[('access', 'Access'), ('service', 'Service')], max_length=100)),
                ('self_type', models.CharField(blank=True, choices=[('self', 'Self'), ('selfwithservice', 'Self with Service'), ('serviceprovider', 'Service Provider'), ('team', 'Team'), ('visitor', 'Visitor')], max_length=100)),
                ('from_date', models.DateField(blank=True, max_length=100)),
                ('to_date', models.DateField(max_length=100, null=True)),
                ('to_date_check', models.BooleanField(default=False, max_length=100)),
                ('from_time', models.TimeField(max_length=100, null=True)),
                ('to_time', models.TimeField(max_length=100, null=True)),
                ('to_time_check', models.BooleanField(default=False, max_length=100)),
                ('reason', models.CharField(blank=True, max_length=500)),
                ('details', models.CharField(blank=True, max_length=500)),
                ('tools_device_required', models.CharField(blank=True, max_length=200)),
                ('source_ip', models.CharField(blank=True, max_length=100)),
                ('destination_ip', models.CharField(blank=True, max_length=100)),
                ('destination_port', models.CharField(blank=True, max_length=100)),
                ('physical_activity_area', models.CharField(blank=True, max_length=300)),
                ('chng_exec_req_id', models.CharField(blank=True, max_length=100)),
                ('vendor_name', models.CharField(blank=True, max_length=100)),
                ('name1', models.CharField(blank=True, max_length=100)),
                ('contact_number1', models.CharField(blank=True, max_length=100)),
                ('name2', models.CharField(blank=True, max_length=100)),
                ('contact_number2', models.CharField(blank=True, max_length=100)),
                ('team_name1', models.CharField(blank=True, max_length=100)),
                ('team_emp_id1', models.CharField(blank=True, max_length=100)),
                ('team_name2', models.CharField(blank=True, max_length=100)),
                ('team_emp_id2', models.CharField(blank=True, max_length=100)),
                ('team_name3', models.CharField(blank=True, max_length=100)),
                ('team_emp_id3', models.CharField(blank=True, max_length=100)),
                ('team_name4', models.CharField(blank=True, max_length=100)),
                ('team_emp_id4', models.CharField(blank=True, max_length=100)),
                ('team_lead', models.CharField(blank=True, max_length=100)),
                ('team_lead_epmloyee_id', models.CharField(blank=True, max_length=100)),
                ('approved_by_HOB', models.CharField(default='No', max_length=100, null=True)),
                ('approved_by_CISO', models.CharField(default='No', max_length=100, null=True)),
                ('approved_by_CTO', models.CharField(default='No', max_length=100, null=True)),
                ('application_status', models.IntegerField(default='0', max_length=100, null=True)),
                ('category', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service_request_form_67',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_category', models.CharField(max_length=50)),
                ('category_id', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='status_code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.CharField(max_length=10)),
                ('status_meaning', models.CharField(max_length=100)),
                ('forwarded_to', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='execution_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(max_length=100, null=True)),
                ('executed_by', models.CharField(max_length=100, null=True)),
                ('approved_by', models.CharField(max_length=100, null=True)),
                ('job_description', models.CharField(max_length=100, null=True)),
                ('execution_status', models.CharField(max_length=100, null=True)),
                ('execution_remarks', models.CharField(max_length=100, null=True)),
                ('revoke_date_time', models.CharField(max_length=100, null=True)),
                ('revoked_by', models.CharField(max_length=100, null=True)),
                ('job_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='execution_logs', to='employeeInfo.service_request')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('EmployeeName', models.CharField(max_length=200)),
                ('EmployeeDesignation', models.CharField(max_length=200)),
                ('EmpFunctionalDesignation', models.CharField(max_length=200)),
                ('Placeofposting', models.CharField(max_length=200)),
                ('EmployeeID', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True)),
                ('signature', models.ImageField(blank=True, upload_to='images/signatures')),
                ('pi', models.ImageField(blank=True, upload_to='images/pi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
